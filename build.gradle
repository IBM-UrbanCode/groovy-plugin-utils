['groovy', 'maven', 'signing'].each {
    apply plugin: it
}
defaultTasks 'clean', 'jar'

group = 'com.ibm.urbancode.plugins'
archivesBaseName = 'groovy-plugin-utils'
// Use -Psnapshot=false to produce new releases
version = '1.0' + ((hasProperty('snapshot') && snapshot == 'false') ? '' : '-SNAPSHOT')

ext.isReleaseVersion = !version.endsWith("SNAPSHOT")
jar.archiveName "${archivesBaseName}-${version}.jar"

def username = hasProperty('ossrhUsername') ? ossrhUsername : ''
def password = hasProperty('ossrhPassword') ? ossrhPassword : ''

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.codehaus.groovy:groovy-all:1.8.8'
    compile 'com.google.code.gson:gson:2.3.1'
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: username, password: password)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: username, password: password)
            }

            pom.project {
                name "${group}:${archivesBaseName}"
                description 'A set of utility scripts than can be used in community plugins on JazzHub'
                url 'https://hub.jazz.net/project/crr/groovy-plugin-utils'
                licenses {
                    license {
                        name 'Eclipse Public License, Version 1.0'
                        url 'https://www.eclipse.org/legal/epl-v10.html'
                    }
                }
                developers {
                    developer {
                        name 'Chris Rees'
                        email 'crr@us.ibm.com'
                        organization 'IBM'
                        organizationUrl 'http://www.ibm.com'
                    }
                }
                scm {
                    connection 'scm:git:https://hub.jazz.net/git/crr/groovy-plugin-utils'
                    developerConnection 'scm:git:https://hub.jazz.net/git/crr/groovy-plugin-utils'
                    url 'https://hub.jazz.net/project/crr/groovy-plugin-utils'
                }
            }
        }
    }
}

// Creates a ${archivesBaseName}-${version}-sources.jar file that contains all Groovy and Java source files
task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.groovy
}

// Creates a ${archivesBaseName}-${version}-javadoc.jar file that contains JavaDoc for all source files
task groovyDocJar(type: Jar) {
    classifier = 'javadoc'
    from groovydoc
}

artifacts {
    archives jar, sourcesJar, groovyDocJar
}

/**
 * Signing requires that the following properties be defined in $GRADLE_USER_HOME/gradle.properties. $GRADLE_USER_HOME defaults to $USER_HOME/.gradle
 * signing.keyId=
 * signing.password=
 * signing.secretKeyRingFile=
 * See http://www.gradle.org/docs/current/userguide/signing_plugin.html
 */
signing {
    required { isReleaseVersion && gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}

